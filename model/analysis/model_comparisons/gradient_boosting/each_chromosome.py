import matplotlib.pyplot as plt
import numpy as np

random_forest = [[0.66230581450526, 0.6593531261676117, 0.6595996924210428, 0.6554358861887055, 0.6607781518338282], [0.5982394409488457, 0.6011252157319278, 0.5966323897092963, 0.6027766540271002, 0.6008291186970312], [0.6409914023618049, 0.6358640937155432, 0.6424551573991691, 0.6334903456167562, 0.6411212086773606], [0.637307504147115, 0.638511662415078, 0.633379360134187, 0.6361858369533793, 0.6417960916174847], [0.6441201879315597, 0.6415308606304017, 0.6463575230591833, 0.6453123763147934, 0.6474957700131664], [0.6126488292277423, 0.6080956325501652, 0.6147610750230685, 0.6110482648566677, 0.6091466520161796], [0.5958643988415625, 0.5990354495601574, 0.5986874054375502, 0.598774758013453, 0.5981890720866181], [0.6151233254010332, 0.6218258004256496, 0.6171403487283943, 0.6199007828158085, 0.6273437152112604], [0.6995994477235759, 0.6988415595469324, 0.6915537466506214, 0.6948108313635805, 0.6978523514205683], [0.6180747181068984, 0.6201519968866549, 0.6166309491449546, 0.6210919697814069, 0.6227709769254293], [0.6544332234767768, 0.6579437330846043, 0.6517701277422363, 0.6596190499794634, 0.6541497852132696], [0.6059556433960259, 0.6095504073515048, 0.6026687222289213, 0.6054301857088736, 0.6067197502482566], [0.7333180013341476, 0.7318375561903986, 0.7309489780523962, 0.7371383010254855, 0.7369782430735394], [0.6859595208188708, 0.6838811179581235, 0.6827038650791764, 0.686432282655348, 0.6810153231450231], [0.6764029126301223, 0.6751587340134544, 0.681823003335614, 0.6811056031903595, 0.6766020757761934], [0.6894033360112397, 0.68756473422107, 0.6967962281698223, 0.6951253836743629, 0.6949148177013678], [0.5937814237456576, 0.5989736327714287, 0.5944513380128084, 0.5872216254514426, 0.6001982654947453], [0.5680414353875899, 0.5600520174322565, 0.5494744478986984, 0.5562336829749635, 0.5626837717335454], [0.6045448594420488, 0.6130857878523188, 0.614959675627028, 0.6072091966224397, 0.6083819261141629], [0.6117193320109509, 0.6112991668516918, 0.6076346615269541, 0.6021521361172784, 0.6023650025214579], [0.7569639404952926, 0.7587485454046383, 0.7628708670397324, 0.7562369487567139, 0.7540336640966411], [0.7155471375594347, 0.7162624634965845, 0.7169061824138573, 0.7164568533027661, 0.7191362498729963], [0.655080516456254, 0.6548796555547062, 0.6450454513806092, 0.6514653679656033, 0.6507455415246017]]
logistic_regression =[[0.6331368940519994, 0.6276591857715905, 0.6264809361253794, 0.6265895416570378, 0.6318017559734992], [0.5937074956314544, 0.5954367769973001, 0.5934534981770295, 0.5964938931603623, 0.5934581670942027], [0.5937898004708587, 0.5885524430037323, 0.5988804933949348, 0.5959980447807871, 0.5958905792108755], [0.6180924960891736, 0.6277490735759881, 0.6211719886425462, 0.6230206990286888, 0.628198195807641], [0.6260933267731615, 0.6243183259176528, 0.6297106197560645, 0.6327389394721719, 0.6339681328634453], [0.4506304662484491, 0.4522236224229739, 0.45495967873982734, 0.45013776595020044, 0.45080457053788037], [0.5604014943027388, 0.5768424744058592, 0.5642704857582479, 0.5756804153925461, 0.5695339840212696], [0.5920867103774863, 0.6014306034422219, 0.5959873375296723, 0.599988008198324, 0.607091764181617], [0.669555829235439, 0.6750105113068561, 0.6672190463685215, 0.664013561960751, 0.6715009758102658], [0.5888671182592256, 0.5909926884077632, 0.5878283733781506, 0.5903129227569387, 0.5925540756852357], [0.6376361424983645, 0.6336431152052451, 0.635228727922099, 0.6356674477835265, 0.6381493967250264], [0.5972486579534588, 0.5946859979737833, 0.5950462489606363, 0.5924319822191287, 0.5974027531747682], [0.6486924705343085, 0.6609102188342136, 0.6464894794416411, 0.6678251383887928, 0.6818940826679771], [0.6134852709942863, 0.6198230808502287, 0.6203499682790955, 0.6186149071759258, 0.6160698075494764], [0.6165885734821742, 0.6164775239450515, 0.6212913325407842, 0.6196039680476352, 0.6160866506085689], [0.6471938639059438, 0.6445774941694977, 0.6493851075301589, 0.6509936784411627, 0.6483730595967554], [0.570015929808664, 0.5794652383532153, 0.5734877155346879, 0.5725339698072127, 0.5750435561721876], [0.5222546009586857, 0.53682126095717, 0.5174602014844534, 0.5269413477708781, 0.5221369469619053], [0.5789775925434975, 0.5816163920809148, 0.5826395115575091, 0.5834722865052777, 0.5867868353236816], [0.6015511055573804, 0.5928066125661643, 0.5978021013071589, 0.5888545713889252, 0.5929724863921623], [0.6357449204477352, 0.6291155866900175, 0.6315188417563087, 0.6396638793401713, 0.6381187915417785], [0.6815165624678217, 0.6767701904730734, 0.6742683799363631, 0.6773722831990066, 0.683877248839327], [0.5117269880246335, 0.5137036143436866, 0.5097760854273777, 0.5177713697101411, 0.5139847527368768]]
mlp = [[0.4999553262069976, 0.49992568100071677, 0.5000892012787551, 0.5000147399528184, 0.5000744193246596], [0.49999999291166214, 0.5001211332228497, 0.5000343680936629, 0.5000343717663863, 0.5000343713668048], [0.5119111562551687, 0.50004405868617, 0.5597660660523112, 0.5528270607991679, 0.523012397222584], [0.5462060457919675, 0.49985828538350097, 0.4999645289827372, 0.5001768710037133, 0.5674355695652435], [0.5005119635150274, 0.5002701207539837, 0.49991865517109224, 0.5004076415112739, 0.5008659838081698], [0.5001554095244459, 0.49997764958853363, 0.5000001449275866, 0.5000221965734182, 0.5000887705150568], [0.49985506524757345, 0.5001737199846774, 0.49999999496534014, 0.49991331386804566, 0.4999423382646814], [0.49984179228504616, 0.5000633997171356, 0.4999048786319362, 0.5000636051914571, 0.4998730723873835], [0.5005444618869966, 0.5003591442136983, 0.5001450653401497, 0.5002485021093767, 0.5004738965489504], [0.500055800418514, 0.5003074530733861, 0.5002776895485989, 0.5117286221124122, 0.5001673648356021], [0.5008656101877993, 0.5007971426493752, 0.5005335375223487, 0.5010057526604617, 0.5010297548858965], [0.5000797789820424, 0.4999734719864176, 0.4999199576126709, 0.4999732448630137, 0.5000269698188402], [0.5787897952021617, 0.5912961769809615, 0.6017235233633116, 0.63767673803008, 0.5004956676106778], [0.5001158909967857, 0.609930924937562, 0.5954110764690554, 0.4999221827059859, 0.5], [0.5002678151290864, 0.4996534922502885, 0.5000380805557008, 0.5002660436392576, 0.5001159527230592], [0.5001125692688067, 0.500189814631791, 0.5002270427115346, 0.500000107041505, 0.49980950042222777], [0.49991136052155033, 0.5001781837286513, 0.5000891280064672, 0.5000304362349932, 0.500118283731154], [0.5000454173216119, 0.5024733127747766, 0.5038455622989846, 0.5088583267963215, 0.5157453763193225], [0.5000383288345506, 0.49988538706918256, 0.5000001442598712, 0.4999613570517792, 0.5001915061662606], [0.5002530168784416, 0.49954507235235307, 0.49989959851548244, 0.5001012043718166, 0.5003010852854757], [0.6087726187484293, 0.6324325956940111, 0.5712938908057641, 0.6160290269414493, 0.5875774765799954], [0.6289368893199372, 0.592924088204273, 0.5000617936649838, 0.5941228760793609, 0.6214595334640408], [0.5737529615893905, 0.5279408487346772, 0.5389443654485202, 0.5425821965875354, 0.5389146662299785]]
gradient_boosting = [[0.6845452208977594, 0.6815870103139303, 0.67909178437438, 0.6790412565779538, 0.6831219740158603], [0.6314531230612104, 0.6350580969246689, 0.6317609515797131, 0.6355108939584517, 0.6358465574429149], [0.6716087937051262, 0.6682527856051159, 0.6690837056039698, 0.6641009163723386, 0.6668721524100738], [0.6766010499263171, 0.679928667706488, 0.6718654138643453, 0.6750828048754541, 0.6843886468457174], [0.6746977446593903, 0.6731821303495702, 0.6739674710075256, 0.6751842723522767, 0.6789983171560035], [0.6482933048513673, 0.6449588720880135, 0.6498324921039507, 0.6475710257370995, 0.6427393748846187], [0.6413121723627364, 0.6425028070133502, 0.6391005999720242, 0.64399976851921, 0.6404132619608032], [0.6585077759890827, 0.6626780223819331, 0.6613671960418834, 0.6674593617418834, 0.6708766401853312], [0.7265345149208309, 0.7277486219912542, 0.7215899180230804, 0.723545935087748, 0.7261065623135085], [0.6543836405457069, 0.6612565486392437, 0.6612109682474463, 0.658471812596214, 0.6656473027164036], [0.6815466822438537, 0.6828336242028044, 0.6820261436578539, 0.6886095955227253, 0.6844731356786944], [0.6444708390890093, 0.6436969295215568, 0.6383179546805715, 0.639126107348705, 0.6463867022279134], [0.7671913826781107, 0.7651362111709913, 0.7669034124024428, 0.7680811511001089, 0.7663945212150499], [0.7254922092816372, 0.7208864348446415, 0.7251575819254705, 0.726635377867645, 0.7265326146452998], [0.7230635424985308, 0.7202074612755923, 0.7257521907705887, 0.720713637289151, 0.7205999310596685], [0.7253107602341109, 0.7203443927529481, 0.73072881367072, 0.7246476535032462, 0.7273011983289388], [0.6430414787504805, 0.6493005831451513, 0.6418821767598064, 0.6412486761160088, 0.6410617342373615], [0.6640640308888018, 0.6760175783768458, 0.6641916941197313, 0.6712041306590406, 0.6659361334069597], [0.6410631092106819, 0.6468416159110186, 0.6438371868020307, 0.6403715354742058, 0.6485382170982019], [0.6706816831137247, 0.668293290914644, 0.6664710742353782, 0.6637697837762832, 0.669722226402687], [0.8090830949020821, 0.8153167683433657, 0.8102140537562701, 0.8126517680570817, 0.817063795314404], [0.7580202110432503, 0.7641719329715497, 0.7548967554542008, 0.7605963120618109, 0.7610861286101495], [0.7063252084255905, 0.7113498545789553, 0.7007957149450103, 0.7032579717904157, 0.7056642993147096]]
chromosomes = [
        'chr1',
        'chr2',
        'chr3',
        'chr4',
        'chr5',
        'chr6',
        'chr7',
        'chr8',
        'chr9',
        'chr10',
        'chr11',
        'chr12',
        'chr13',
        'chr14',
        'chr15',
        'chr16',
        'chr17',
        'chr18',
        'chr19',
        'chr20',
        'chr21',
        'chr22',
        'chrX'
    ]


# Calculate the means and standard deviations
def calculate_stats(data):
    means = [np.mean(sublist) for sublist in data]
    std_devs = [np.std(sublist) for sublist in data]
    return means, std_devs

means1, stds1 = calculate_stats(random_forest)
means2, stds2 = calculate_stats(logistic_regression)
means3, stds3 = calculate_stats(mlp)
means4, stds4 = calculate_stats(gradient_boosting)

# Plotting the data
plt.figure(figsize=(14, 10))

plt.errorbar(chromosomes, means1, yerr=stds1, label='random_forest', fmt='-o', color='b')
plt.errorbar(chromosomes, means2, yerr=stds2, label='logistic_regression', fmt='-o', color='r')
plt.errorbar(chromosomes, means3, yerr=stds3, label='mlp', fmt='-o', color='g')
plt.errorbar(chromosomes, means4, yerr=stds4, label='gradient_boosting', fmt='-o', color='m')

# Adding titles and labels
plt.title('Model Comparison per Chromosome')
plt.xlabel('Chromosomes')
plt.ylabel('ROC AUC')
plt.legend()
plt.savefig("each_chromosome.png")